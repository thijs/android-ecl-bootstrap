
(let ((modules (directory "../fas/*.fas")))
  (let ((dht (find "cl-dht" modules :test (lambda (item el) (search item (namestring el))))))
    (setf modules (nreverse (pushnew dht modules))))
  (format t "~&modules: ~a~%" modules)
  (with-open-file (o "../fas/load.lisp" :direction :output :if-exists :supersede)
    (format o "(let ((modules (list ")
    (format o "~{\"~a\"~^ ~}" (map 'list (lambda (module)
                                           (let ((filename (file-namestring module)))
                                             (subseq filename 0 (- (length filename) 4))))
                                           modules))
    (format o "))~%")
    (format o "      (dir (si:getenv \"ECLDIR\")))~%")
    (format o "  (dolist (module modules)~%")
    (format o "    (android-log (format nil \"found ~~a\" module))~%")
    (format o "    (android-log (format nil \"loading ~~a: ~~a\" module (load (format nil \"~~a~~a.fas\" dir module))))))~%")))
